---
# Lookup tasks file for ansible-role-certificates

- name: "Check for Shared CA Certificates directory (Debian)"
  ansible.builtin.stat:
    path: /usr/local/share/ca-certificates
  ignore_errors: true
  register: result
  when:
    - ansible_facts['os_family'] == "Debian"

- name: "Set facts Shared CA Certificates directory (Debian)"
  ansible.builtin.set_fact:
    ca_certificate_dir: /usr/local/share/ca-certificates
    certificate_update_tool: update-ca-certificates
  when:
    - ansible_facts['os_family'] == "Debian"
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false

- name: "Check for Shared CA Certificates directory (RedHat)"
  ansible.builtin.stat:
    path: /etc/pki/ca-trust/source/anchors
  ignore_errors: true
  register: result
  when:
    - ansible_facts['os_family'] == "RedHat"

- name: "Set facts Shared CA Certificates directory (RedHat)"
  ansible.builtin.set_fact:
    ca_certificate_dir: /etc/pki/ca-trust/source/anchors
    ca_certificate_blacklist_dir: /etc/pki/ca-trust/source/blacklist
    certificate_update_tool: update-ca-trust
  when:
    - ansible_facts['os_family'] == "RedHat"
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false

- name: "Check if Certificate exists in the Shared CA Certificates directory"
  ansible.builtin.stat:
    path: "{{ ca_certificate_dir }}/{{ certificate_file.rsplit('/', 1)[1] }}"
  ignore_errors: true
  register: result

- name: "Set facts if the Certificate exists in the Shared CA Certificates directory"
  ansible.builtin.set_fact:
    ca_certificate_file_exists: true
  when:
    - result.stat.exists
    - result.failed is false

- name: "Set facts if the Certificate does not exist in the Shared CA Certificates directory"
  ansible.builtin.set_fact:
    ca_certificate_file_exists: false
  when:
    - result.stat.exists is false
